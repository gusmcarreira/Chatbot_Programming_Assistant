Variáveis podem ser de vários tipos. Os tipos básicos de variáveis incluem números inteiros (int), números de ponto flutuante (float), strings ou cadeias de caracteres (str), booleanos(bool) e listas (list).
-#-
Int, ou inteiro, é um número inteiro, positivo ou negativo, sem décimas, de tamanho ilimitado.

Exemplo:

<code>x = 20</code>
-#-
Para converter uma string ou uma float para um inteiro usa-se a função int().

Exemplo:
	
<code>
# Converte float para inteiro
x = 2.5
s = int(x)
print(s)
</code>

<code_print>2
-#-
Float, ou número de ponto flutuante, é um número, positivo ou negativo, que contém uma ou mais decimas.

Exemplo:

<code>X = 20.5</code>

Note que na matemática do dia a dia usamos a virgula (,) para este efeito, no entanto Python segue a notação dos Estado Unidos em que se faz uso do ponto (.)
-#-
Para converter um inteiro para float usa-se a função float().

Exemplo:
	
<code>
# Converte inteiro para float
x = 2
s = float(x)
print(s)
</code>

<code_print>2.0
-#-

Strings são sequências (cadeias) de caracteres. Noutras palavras, uma string é simplesmente uma sequência de zero ou mais letras juntas. 

Strings podem ser declaradas usando aspas simples ou duplas. 

Exemplo:

<code>
var1 = ''
var2 = "a"
var3 = 'sou um chatbot'
</code>
-#-
Para converter algo para string usa-se a função str().

Exemplo:

<code>
# Converte inteiro para string
x = 2
s = str(x)
print(s)
</code>
-#-
Variáveis booleanas são uma forma de armazenar um valor lógico, ou seja, verdadeiro (True) e falso (False).

Exemplo:
	
<code>x = True</code>

Vejamos mais alguns exemplos do uso de operações lógicas (booleanas):

<code>
a = 4 > 0
print(a)
</code>

<code_print>True

No exemplo acima estamos a comparar dois inteiros (o 4 e o 0). O "a" é a nossa variável booleana, que é True (verdade), pois como 4 é maior (>) que 0.
-#-
Listas são variáveis em que se guardam mais de um dado. Para a sua criação são usados parêtesis retangulares.

Exemplo:

<code>
cores = ["vermelho", "amarelo", "laranja"]
print(cores)
</code>

<code_print>["vermelho", "amarelo", "laranja"]

Para aceder a um dos seus valores basta fazer cores[indice que queremos].

Exemplo:

<code>
cores = ["vermelho", "amarelo", "laranja"]
print(cores[1])
</code>

<code_print>amarelo

Não se esqueça que os indices começam no 0!