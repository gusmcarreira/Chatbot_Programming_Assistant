Uma condição ou condicional é uma capacidade importantíssima de uma linguagem de programação, necessária em praticamente todo programa de computador, mais especificamente a capacidade de tomar decisões baseadas em certas condições.

Por exemplo, o levantamento de dinheiro num multibanco passa por uma condição: o valor desejado deve ser menor ou igual ao saldo da conta. Em outras palavras, só pode levantar o que possui.

No exemplo do banco, comparamos se a variável que guarda o valor solicitado para saque é MAIOR OU IGUAL ao valor guardado na variável que armazena o saldo bancário.

A linguagem Python usa algumas palavras-chave para indicar execução condicional de código: if, elif (else if), else.

Em alto nível, um condicional é como a sequência de passos abaixo:

<code>
1. A condição é verdadeira?
2. Se sim, execute um trecho de código.
3. Caso contrário, execute outro trecho de código.
</code>

As operações de comparação suportadas são:

<code>
> (maior que)
< (menor que)
== (igualdade)
>= (maior ou igual)
<= (menor ou igual)
</code>

Sugestões:Sintaxe da instrução if<sep>Sintaxe da instrução elif<sep>Sintaxe da instrução else<sep>Escopo de uma condição
-#-
A sintaxe de uma condição ou instrução if em Python é:

<code>if variável operador variável:</code>

Constituído pela palavra-chave if, duas variáveis para comparação, o operador dessa comparação, e finalizando com dois pontos (:).

As verificações de uma condição SEMPRE resultam em verdadeiro ou falso. A escolha entre um ou outro dependerá do valor das variáveis.

Exemplo:

<code>
saldo = 100
levantamento = 50

if saldo >= levantamento:
  print("Possível levantar dinheiro")
</code>

<code_print>Possível levantar dinheiro

A comparação acima resultará em verdadeiro (True), pois o saldo é maior que o levantamento. Quando essa situação ocorre, o conjunto de instruções que pertencem à condição serão executadas (escopo da condição).

Observe como a instrução "print" apresenta um espaçamento (indentação) no inicio da linha. Isso é SEMPRE NECESSÁRIO e define quais as instruções serão executadas quando a comparação for verdadeira. 

Sugestões:Sintaxe da instrução elif<sep>Sintaxe da instrução else<sep>Escopo de uma condição
-#-
O uso do if não resolve todos os nosso problemas, pois quando a comparação de uma condição não for verdadeira também pode ser preciso realizar alguma ação. Em casos como esse podemos utilizar uma instrução conhecida por "else".

A sintaxe de uma condição ou instrução else em Python é:

<code>else:</code>

Exemplo:

<code>
saldo = 12
levantamento = 35

if saldo >= levantamento:
  print("Sucesso!")
else:
  print("Sem sucesso!")
</code>

<code_print>Sem sucesso!

Há dois detalhes para ficar atento no uso do else. O primeiro é que não é preciso escrever uma comparação e isto faz sentido, pois o seu escopo SEMPRE será executado quando a comparação do if resultar em falso.

O segundo ponto é que, assim como no if, é preciso escrever as instruções do seu escopo com o espaçamento.

Pense no if/elif como um "se" (se isto for verdade) e no else como um "então/rest", SE o if não for verdade, ENTÃO correr o que está no escopo do else.

Sugestões:Sintaxe da instrução if<sep>Sintaxe da instrução elif<sep>Escopo de uma condição
-#-
Poderá também ser necessário várias condições, ou seja, condições em cadeia (um após o outro). Em casos como esse podemos utilizar uma instrução conhecida como "elif".

A sintaxe de uma condição ou instrução elif em Python é:

<code>elif variável operador variável:</code>

Exemplo

<code>
saldo = 100
levantamento = 100

if saldo > levantamento:
  print("Sucesso!")
elif saldo == levantamento:
  print("Sucesso! Conta ficou a 0")
else:
  print("Sem sucesso!")
</code>

<code_print>Sucesso! Conta ficou a 0

Tal como a condição if, esta necessita de uma condição, seguida por : (dois pontos). Observe como a instrução "print" apresenta um espaçamento (indentação) no inicio da linha. Isso é SEMPRE NECESSÁRIO e define quais as instruções serão executadas quando a comparação for verdadeira.

Não está limitado a uma única instrução elif, pode utilizar várias.

Sugestões:Sintaxe da instrução if<sep>Sintaxe da instrução else<sep>Escopo de uma condição
-#-
O escopo de uma condição é o bloco de código que será executado quando a sua condição se verifica.

Esse escopo é determinado pelo número de espaços (indentação) que vem depois da sua declaração, tendo de ser no MINIMO 1, no entanto, tem de ser SEMPRE O MESMO NÚMERO para os diferentes blocos de código.

Exemplo:

<code>
num1 = 0

if num1 < 3:
 | print("Menor que 3")
 | print("Escopo correto")

if num1 == 3:
 | #Numero de espaços diferente
 | #Para o mesmo bloco (erro)
 | print("Menor que 3")
 |  print("Escopo incorreto")
</code>

Os escopos são portanto controlados pelo número de espaços. Sendo que uma condição pode por ela conter mais condições, ou mesmo repetições que contê também o seu escopo.

<code>
num1 = 1

if num1 < 3:
 | #Escopo if(1)
 | print("Menor que 3")
 | if num1 < 3:
 | | #Escopo if(2)
 | | print("Menor que 3")
</code>

Nota: o simbolo (|), está presente meramente para demonstração dos diferentes escopos (indentações).