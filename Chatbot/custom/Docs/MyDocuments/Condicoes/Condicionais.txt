Para escrever programas úteis, quase sempre precisamos da capacidade de verificar condições e mudar o comportamento do programa de acordo com elas. Instruções condicionais nos dão esta capacidade.

Por exemplo, o levantamento de dinheiro num multibanco passa por uma condição: o valor desejado deve ser menor ou igual ao saldo da conta. Em outras palavras, só pode levantar o que possui.

A linguagem Python usa algumas palavras-chave para indicar execução condicional de código: if, elif (else if), else.

Em alto nível, um condicional é como a sequência dos passos abaixo:

<code>
1. A condição é verdadeira?
2. Se sim, execute um trecho de código.
3. Caso contrário, execute outro trecho de código.
</code>

Sugestões:Sintaxe da instrução if<sep>Sintaxe da instrução elif<sep>Sintaxe da instrução else<sep>Escopo de uma condição<sep>Operadores de comparação
-#-
A sintaxe de uma condição ou instrução if em Python é:

<code_print>if variável operador variável:</code_print>

A expressão booleana depois do if é chamada de condição. Se for verdadeira, a instrução endentada é executada. Se não, nada acontece.

Exemplo:

<code>
1 saldo = 100
2 levantamento = 50
3
4 if saldo >= levantamento:
5   print("Possível levantar dinheiro")

Possível levantar dinheiro
</code>

A comparação acima resultará em verdadeiro (True), pois o saldo é maior que o levantamento. Quando essa situação ocorre, o conjunto de instruções que pertencem à condição serão executadas (escopo da condição).

Sugestões:Sintaxe da instrução elif<sep>Sintaxe da instrução else<sep>Escopo de uma condição<sep>Operadores de comparação (relacionais)
-#-
O uso do if não resolve todos os nosso problemas, pois quando a comparação de uma condição não for verdadeira também pode ser preciso realizar alguma ação. Em casos como esse podemos utilizar uma instrução conhecida por "else".

A sintaxe de uma condição ou instrução else em Python é:

<code_print>else:</code_print>

Exemplo:

<code>
1 saldo = 12
2 levantamento = 35
3
4 if saldo >= levantamento:
5   print("Sucesso!")
6 else:
7   print("Sem sucesso!")

Sem sucesso!
</code>

Tenha atenção que ao usar o else não se escreve uma comparação, e isto faz sentido, pois o seu escopo SEMPRE será executado quando a comparação do if e elif/s resultar em falso.

Sugestões:Sintaxe da instrução if<sep>Sintaxe da instrução elif<sep>Escopo de uma condição<sep>Operadores de comparação (relacionais)
-#-
Poderá também ser necessário várias condições, ou seja, condições em cadeia (uma após a outra). Em casos como esse podemos utilizar uma instrução conhecida como "elif".

A sintaxe de uma condição ou instrução elif em Python é:

<code_print>elif variável operador variável:</code_print>

Exemplo:

<code>
1 saldo = 100
2 levantamento = 100
3
4 if saldo > levantamento:
5   print("Sucesso!")
6 elif saldo == levantamento:
7   print("Sucesso! Conta ficou a 0")
8 else:
9   print("Sem sucesso!")

Sucesso! Conta ficou a 0
</code>

Não há nenhum limite para o número de instruções elif. Se houver uma cláusula else, ela deve estar no fim, mas não é preciso haver uma.

Cada condição é verificada em ordem. Se a primeira for falsa, a próxima é verificada, e assim por diante. Se uma delas for verdadeira, o ramo correspondente é executado e a instrução é encerrada. Mesmo se mais de uma condição for verdade, só o primeiro ramo verdadeiro é executado.

Sugestões:Sintaxe da instrução if<sep>Sintaxe da instrução else<sep>Escopo de uma condição<sep>Operadores de comparação (relacionais)
-#-
O escopo (de uma condição) é o bloco de código que será executado quando a sua condição se verifica.

Esse escopo é determinado pelo número de espaços (indentação) que vem depois da sua declaração, tendo de ser no MINIMO 1, no entanto, tem de ser SEMPRE O MESMO NÚMERO para os diferentes blocos de código.

Exemplo:

<code>
num1 = 0

if num1 < 3:
 | print("Menor que 3")
 | print("Escopo correto")

if num1 == 3:
 | #Numero de espaços diferente
 | #Para o mesmo bloco (erro)
 | print("Menor que 3")
 |   print("Escopo incorreto")
</code>

Os escopos são portanto controlados pelo número de espaços. Sendo que uma condição pode por ela conter mais condições, ou mesmo repetições que contê também o seu escopo.

<code>
num1 = 1

if num1 < 3:
 | #Escopo if(1)
 | print("Menor que 3")
 | if num1 < 3:
 | | #Escopo if(2)
 | | print("Menor que 3")
</code>

Nota: o simbolo (|), está presente meramente para demonstração dos diferentes escopos (indentações).